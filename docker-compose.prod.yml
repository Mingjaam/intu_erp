version: '3.8'

services:
  # PostgreSQL Database
  postgres:
    image: postgres:15-alpine
    container_name: intu_erp_postgres_prod
    command: postgres -c ssl=off
    environment:
      POSTGRES_DB: intu_erp
      POSTGRES_USER: intu_erp_user
      POSTGRES_PASSWORD: ${DB_PASSWORD}
    ports:
      - "5432:5432"
    volumes:
      - postgres_data_prod:/var/lib/postgresql/data
    networks:
      - intu_erp_network
    restart: unless-stopped

  # Redis Cache
  redis:
    image: redis:7-alpine
    container_name: intu_erp_redis_prod
    ports:
      - "6379:6379"
    volumes:
      - redis_data_prod:/data
    networks:
      - intu_erp_network
    restart: unless-stopped

  # Backend API (프로덕션용)
  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile.prod
    container_name: intu_erp_backend_prod
    environment:
      NODE_ENV: development
      DATABASE_URL: postgresql://intu_erp_user:${DB_PASSWORD}@postgres:5432/intu_erp?sslmode=disable
      DB_HOST: postgres
      DB_PORT: 5432
      DB_USERNAME: intu_erp_user
      DB_PASSWORD: ${DB_PASSWORD}
      DB_NAME: intu_erp
      DB_SSL: ${DB_SSL:-false}
      REDIS_URL: redis://redis:6379
      JWT_SECRET: ${JWT_SECRET}
      JWT_EXPIRES_IN: 7d
      PORT: 3001
      CORS_ORIGIN: ${FRONTEND_URL}
    ports:
      - "3001:3001"
    depends_on:
      - postgres
      - redis
    volumes:
      - ./uploads:/app/uploads:rw
    networks:
      - intu_erp_network
    restart: unless-stopped

  # Frontend (프로덕션용)
  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile.prod
    container_name: intu_erp_frontend_prod
    environment:
      NEXT_PUBLIC_API_URL: ${API_URL}
    ports:
      - "3000:3000"
    depends_on:
      - backend
    networks:
      - intu_erp_network
    restart: unless-stopped

  # Nginx Reverse Proxy
  nginx:
    image: nginx:alpine
    container_name: intu_erp_nginx_prod
    ports:
      - "80:80"
      - "443:443"
    depends_on:
      - backend
      - frontend
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf:rw
      - ./nginx/ssl:/etc/nginx/ssl:rw
      - /etc/letsencrypt:/etc/letsencrypt:ro
      - ./uploads:/var/www/uploads:rw
    networks:
      - intu_erp_network
    restart: unless-stopped

volumes:
  postgres_data_prod:
  redis_data_prod:

networks:
  intu_erp_network:
    driver: bridge
